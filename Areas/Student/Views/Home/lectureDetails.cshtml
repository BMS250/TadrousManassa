@model TadrousManassa.Models.Lecture

<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css" 
    integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumxWNU3hPU4tYLIprf3b0WxJf7BYJ5O4vRII5Ym" 
    crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/fun-layout.css" />
    <style>
        .video-container {
          position: relative;
          padding-bottom: 56.25%;
          height: 0;
          margin-bottom: 1.5rem;
        }

        .video-container video {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          object-fit: contain;
        }

        
        video {
          -webkit-user-select: none;
          -webkit-touch-callout: none;
          user-select: none;
        }
    </style>
</head>
<div class="container mt-4">
    <h1 class="mb-3">@Model.Name</h1>
    <p class="text-muted"><strong>Unit:</strong> @Model.Unit</p>
    <p>@Model.Description</p>

    <div class="video-container">
        @* <video id="lecture" controls controlsList="nodownload" oncontextmenu="return false;" playsinline preload="metadata">
            <source src="@Model.VideoPath" type="video/mp4">
            <source src="@Model.VideoPath" type="video/webm">
            <source src="@Model.VideoPath" type="video/ogg">
            Your browser does not support the video tag.
        </video> *@
        <video id="lectureVideo" data-lecture-id="@Model.Id" controls controlsList="nodownload" oncontextmenu="return false;" playsinline preload="metadata">
            <source src="@TempData["VideoPath"]" type="video/mp4">
            Your browser does not support the video tag.
        </video>
    </div>

    <div class="d-flex justify-content-around">
        @if (!string.IsNullOrEmpty(Model.SheetPath))
        {
            <a href="@Model.SheetPath" class="btn btn-outline-primary" target="_blank">View Sheet</a>
        }
        @if (!string.IsNullOrEmpty(Model.QuizPath))
        {
            <a href="@Model.QuizPath" class="btn btn-outline-success" target="_blank">Take Quiz</a>
        }
    </div>
</div>
    
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" 
        integrity="sha384-DfXdAiqz6p7pDB3X4N2/QUPDtEwAYIITiP28IEVFNqM/Y4xc0xbS9pD9b3n3hw33" 
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js" 
        integrity="sha384-Piv4xVNRyMGpqk6PHW2FjYJvUju9Ul1N2qgl/mUP5ZnZB3Zuo8Ncb7EN4FLfL7p" 
        crossorigin="anonymous"></script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />

@* <script>
    document.addEventListener("DOMContentLoaded", function () {
        var lectureVideo = document.getElementById("lecture");
        var lectureId = "@Model.Id"; // Ensure you pass Lecture ID to the frontend
        var viewCountElement = document.getElementById("viewCount");

        // ✅ Show Toastr notifications from TempData
        @if (TempData["success"] != null)
        {
            <text>toastr.success("@TempData["success"]");</text>
        }
        @if (TempData["error"] != null)
        {
            <text>toastr.error("@TempData["error"]");</text>
        }

        // ✅ Track views when the video starts playing (only once)
        if (lectureVideo) {
            lectureVideo.addEventListener("play", function () {
                fetch(`/Student/Home/video-play`, { // Ensure this matches your controller route
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ lectureId: lectureId })
                })
                .then(response => response.json())
                .then(data => {
                    if (viewCountElement && data.count !== undefined) {
                        viewCountElement.innerText = data.count; // ✅ Update UI
                    }
                })
                .catch(error => {
                    console.error("Error tracking video play:", error);
                    toastr.error("Failed to track video view.");
                });
            }, { once: true });
        }
    });
</script>
 *@