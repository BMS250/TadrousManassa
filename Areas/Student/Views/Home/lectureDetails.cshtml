@model TadrousManassa.Models.Lecture

<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css" 
    integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumxWNU3hPU4tYLIprf3b0WxJf7BYJ5O4vRII5Ym" 
    crossorigin="anonymous">
    <style>
        .video-container {
          position: relative;
          padding-bottom: 56.25%;
          height: 0;
          margin-bottom: 1.5rem;
        }

        .video-container video {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          object-fit: contain;
        }

        
        video {
          -webkit-user-select: none;
          -webkit-touch-callout: none;
          user-select: none;
        }
    </style>
</head>
<div class="container mt-4">
    <h1 class="mb-3">@Model.Name</h1>
    <p class="text-muted"><strong>Unit:</strong> @Model.Unit</p>
    <p>@Model.Description</p>

    <div class="video-container">
        <video controls controlsList="nodownload" oncontextmenu="return false;" playsinline preload="metadata">
            <source src="@Model.VideoPath" type="video/mp4">
            <source src="@Model.VideoPath" type="video/webm">
            <source src="@Model.VideoPath" type="video/ogg">
            Your browser does not support the video tag.
        </video>


    </div>
    @* <iframe src="@Model.VideoPath" frameborder="0" allowfullscreen></iframe> *@

    <div class="d-flex justify-content-around">
        @if (!string.IsNullOrEmpty(Model.SheetPath))
        {
            <a href="@Model.SheetPath" class="btn btn-outline-primary" target="_blank">View Sheet</a>
        }
        @if (!string.IsNullOrEmpty(Model.QuizPath))
        {
            <a href="@Model.QuizPath" class="btn btn-outline-success" target="_blank">Take Quiz</a>
        }
    </div>
</div>
    
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" 
        integrity="sha384-DfXdAiqz6p7pDB3X4N2/QUPDtEwAYIITiP28IEVFNqM/Y4xc0xbS9pD9b3n3hw33" 
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js" 
        integrity="sha384-Piv4xVNRyMGpqk6PHW2FjYJvUju9Ul1N2qgl/mUP5ZnZB3Zuo8Ncb7EN4FLfL7p" 
        crossorigin="anonymous"></script>

@* <head> *@
@*     <meta charset="utf-8" /> *@
@*     <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"> *@
@*     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css"  *@
@*     integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumxWNU3hPU4tYLIprf3b0WxJf7BYJ5O4vRII5Ym"  *@
@*     crossorigin="anonymous"> *@
@*     <style> *@
@*         .video-container { *@
@*           position: relative; *@
@*           padding-bottom: 56.25%; *@
@*           height: 0; *@
@*           margin-bottom: 1.5rem; *@
@*           overflow: hidden; *@
@*           background-color: #000; /* Dark background helps with video contrast */ *@
@*         } *@
@*         .video-container video { *@
@*           position: absolute; *@
@*           top: 0; *@
@*           left: 0; *@
@*           width: 100%; *@
@*           height: 100%; *@
@*           object-fit: contain; *@
@*           background-color: #000; /* Ensures black bars instead of transparent */ *@
@*         } *@
@*         /* Additional mobile device optimizations */ *@
@*         @media (max-width: 768px) { *@
@*           .video-container { *@
@*             padding-bottom: 75%; /* More space for controls on mobile */ *@
@*           } *@
@*         } *@
@*         /* Fix for iOS Safari */ *@
@*         video::-webkit-media-controls { *@
@*           display: inline !important; *@
@*         } *@
@*         /* Disable text selection/right-click */ *@
@*         video { *@
@*           -webkit-user-select: none; *@
@*           -webkit-touch-callout: none; *@
@*           user-select: none; *@
@*         } *@
@*         .video-fallback { *@
@*           text-align: center; *@
@*           padding: 20px; *@
@*           background: #f8f9fa; *@
@*           border: 1px solid #dee2e6; *@
@*         } *@
@*     </style> *@
@* </head> *@
@* <div class="container mt-4"> *@
@*     <h1 class="mb-3">@Model.Name</h1> *@
@*     <p class="text-muted"><strong>Unit:</strong> @Model.Unit</p> *@
@*     <p>@Model.Description</p> *@
@*     <div class="video-container" id="videoContainer"> *@
@*         <video id="lectureVideo"  *@
@*                controls  *@
@*                controlsList="nodownload"  *@
@*                oncontextmenu="return false;"  *@
@*                playsinline  *@
@*                webkit-playsinline="true" *@
@*                x-webkit-airplay="allow" *@
@*                preload="metadata" *@
@*                crossorigin="anonymous"> *@
@*             <!-- Primary MP4 source --> *@
@*             <source src="@Model.VideoPath" type="video/mp4" /> *@
@*             <!-- Add additional formats if available --> *@
@*             @if (!string.IsNullOrEmpty(Model.VideoPath)) *@
@*             { *@
@*                     <source src="@Model.VideoPath" type="video/webm" /> *@
@*             } *@
@*             <p class="video-fallback"> *@
@*                 Your browser does not support the video player.  *@
@*                 <a href="@Model.VideoPath" download>Download the video</a> to watch offline. *@
@*             </p> *@
@*         </video> *@
@*     </div> *@
@*     <div class="text-center mb-3"> *@
@*         <div class="custom-control custom-checkbox"> *@
@*             <input type="checkbox" class="custom-control-input" id="audioOnlyMode"> *@
@*             <label class="custom-control-label" for="audioOnlyMode">Audio Only Mode</label> *@
@*         </div> *@
@*     </div> *@
@*     <div class="d-flex justify-content-around mb-4"> *@
@*         @if (!string.IsNullOrEmpty(Model.SheetPath)) *@
@*         { *@
@*                 <a href="@Model.SheetPath" class="btn btn-outline-primary" target="_blank">View Sheet</a> *@
@*         } *@
@*         @if (!string.IsNullOrEmpty(Model.QuizPath)) *@
@*         { *@
@*                 <a href="@Model.QuizPath" class="btn btn-outline-success" target="_blank">Take Quiz</a> *@
@*         } *@
@*     </div> *@
@* </div> *@

@* <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"  *@
@*         integrity="sha384-DfXdAiqz6p7pDB3X4N2/QUPDtEwAYIITiP28IEVFNqM/Y4xc0xbS9pD9b3n3hw33"  *@
@*         crossorigin="anonymous"></script> *@
@* <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"  *@
@*         integrity="sha384-Piv4xVNRyMGpqk6PHW2FjYJvUju9Ul1N2qgl/mUP5ZnZB3Zuo8Ncb7EN4FLfL7p"  *@
@*         crossorigin="anonymous"></script> *@
@* <script> *@
@*     document.addEventListener('DOMContentLoaded', function() { *@
@*         var video = document.getElementById('lectureVideo'); *@
@*         var container = document.getElementById('videoContainer'); *@
@*         var audioOnlyCheckbox = document.getElementById('audioOnlyMode'); *@

@*         // Check if video dimensions are available *@
@*         function checkVideoDimensions() { *@
@*             // If dimensions are zero after metadata is loaded, might be audio-only playback *@
@*             if (video.videoWidth === 0 || video.videoHeight === 0) { *@
@*                 console.warn('Video dimensions unavailable - possible codec issue or audio-only playback'); *@
@*                 audioOnlyCheckbox.checked = true; *@
@*                 enableAudioOnlyMode(); *@
@*             } *@
@*         } *@

@*         // Enable audio-only mode with appropriate styling *@
@*         function enableAudioOnlyMode() { *@
@*             container.style.paddingBottom = "80px"; // Reduce container height *@
@*             video.style.height = "80px"; *@
@*             video.style.objectFit = "contain"; *@
@*             video.setAttribute('poster', ''); // Remove poster if any *@
@*         } *@

@*         // Reset to video mode *@
@*         function disableAudioOnlyMode() { *@
@*             container.style.paddingBottom = "56.25%"; // Reset to 16:9 ratio *@
@*             video.style.height = "100%"; *@
@*             video.style.objectFit = "contain"; *@
@*         } *@

@*         // Handle audio-only checkbox toggle *@
@*         audioOnlyCheckbox.addEventListener('change', function() { *@
@*             if (this.checked) { *@
@*                 enableAudioOnlyMode(); *@
@*             } else { *@
@*                 disableAudioOnlyMode(); *@
@*             } *@
@*         }); *@

@*         // Check video dimensions after metadata is loaded *@
@*         video.addEventListener('loadedmetadata', checkVideoDimensions); *@

@*         // Add error handling for video loads *@
@*         video.addEventListener('error', function(e) { *@
@*             console.error('Error with video playback:', e); *@
@*             var errorMessage = 'Unable to play this video. '; *@

@*             // Try to identify the specific error *@
@*             if (video.error) { *@
@*                 switch (video.error.code) { *@
@*                     case 1: errorMessage += 'The video file could not be found.'; break; *@
@*                     case 2: errorMessage += 'The video playback was aborted.'; break; *@
@*                     case 3: errorMessage += 'The video playback was interrupted due to corruption or unsupported features.'; break; *@
@*                     case 4: errorMessage += 'The video could not be loaded due to network or server failure.'; break; *@
@*                     default: errorMessage += 'An unknown error occurred.'; *@
@*                 } *@
@*             } *@

@*             container.innerHTML = '<div class="alert alert-warning">' + errorMessage +  *@
@*                                   '<br>Try using a different browser or enable audio-only mode.</div>'; *@
@*         }); *@

@*         // Force MIME type check *@
@*         if (video.canPlayType('video/mp4') === '') { *@
@*             console.warn('This browser does not support MP4 video'); *@
@*         } *@

@*         // Force video reload if it stalls *@
@*         video.addEventListener('stalled', function() { *@
@*             console.warn('Video playback stalled, attempting to recover...'); *@
@*             video.load(); *@
@*         }); *@

@*         // Add special handling for iOS devices *@
@*         var isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream; *@
@*         if (isIOS) { *@
@*             video.setAttribute('playsInline', 'true'); *@
@*             video.setAttribute('webkit-playsinline', 'true'); *@
@*         } *@
@*     }); *@
@* </script> *@